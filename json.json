[ Instance {
    dataValues:
     { email: 'admin@example.com',
       passwd: '123456',
       level: 1,
       id: '1',
       createdAt: 124653513,
       updatedAt: 21213213,
       version: 1 },
    _previousDataValues:
     { email: 'admin@example.com',
       passwd: '123456',
       level: 1,
       id: '1',
       createdAt: 124653513,
       updatedAt: 21213213,
       version: 1 },
    _changed: {},
    '$modelOptions':
     { timestamps: false,
       instanceMethods: {},
       classMethods: {},
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       hooks: [Object],
       indexes: [],
       name: [Object],
       omitNul: false,
       tableName: 'managers',
       sequelize: [Object],
       uniqueKeys: [Object],
       hasPrimaryKeys: true },
    '$options':
     { isNewRecord: false,
       '$schema': null,
       '$schemaDelimiter': '',
       raw: true,
       attributes: [Array] },
    hasPrimaryKeys: true,
    __eagerlyLoadedAssociations: [],
    isNewRecord: false },
  Instance {
    dataValues:
     { email: 'wangchen@qq.com',
       passwd: '123456',
       level: 2,
       id: '2',
       createdAt: 545464656,
       updatedAt: 5446464,
       version: 1 },
    _previousDataValues:
     { email: 'wangchen@qq.com',
       passwd: '123456',
       level: 2,
       id: '2',
       createdAt: 545464656,
       updatedAt: 5446464,
       version: 1 },
    _changed: {},
    '$modelOptions':
     { timestamps: false,
       instanceMethods: {},
       classMethods: {},
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       hooks: [Object],
       indexes: [],
       name: [Object],
       omitNul: false,
       tableName: 'managers',
       sequelize: [Object],
       uniqueKeys: [Object],
       hasPrimaryKeys: true },
    '$options':
     { isNewRecord: false,
       '$schema': null,
       '$schemaDelimiter': '',
       raw: true,
       attributes: [Array] },
    hasPrimaryKeys: true,
    __eagerlyLoadedAssociations: [],
    isNewRecord: false } ]

